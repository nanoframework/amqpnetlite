trigger:
  branches:
    include:
    - cd-nanoframework
  paths:
    exclude:
    - /*.md
    - .gitignore
  # waiting for feature to become available
  # tags:
  #   include:
  #   - v/*

pr:
  branches:
    include:
    - cd-nanoframework
  autoCancel: true

# add nf-tools repo to resources (for Azure Pipelines templates)
resources:
  repositories:
    - repository: templates
      type: github
      name: nanoframework/nf-tools
      endpoint: nfbot

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/amqp-nanoFramework.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  # creates a counter called versioncounter and assigns it to the minor variable
  REVISION: $[counter('versioncounter', 5)]

steps:

- checkout: self

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '4.9.3'
  displayName: Install specifc version of NuGet

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: config
    nugetConfigPath: NuGet.config
  displayName: NuGet restore

- task: InstallnFBuildComponents@1
  displayName: Install nanoFramework MSBuild components

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  inputs:
      targetType: 'inline'
      script: |
          $counter = $env:REVISION
          $version = [int]$counter

          # preview version          
          # $nugetVersion = "2.1.8-preview."
          
          # stable version
          $nugetVersion = "2.1.8."
          
          
          $nugetVersion = $nugetVersion + $version.ToString()

          Write-Host "$("##vso[task.setvariable variable=NUGET_VERSION]")$nugetVersion"
      errorActionPreference: 'stop'
      failOnStderr: 'true'
  displayName: Tweak NuGet package version

- powershell: |
    # get subject and commit message for commit
    $commitMessage = git log --format='%B' -1

    # need to flatten message by removing new lines
    $commitMessage = $commitMessage -replace "`r`n", " "

    if($commitMessage -like "*PUBLISH_RELEASE*")
    {
      # set variable
      Write-Host "$("##vso[task.setvariable variable=RELEASE_DRAFT;isOutput=true]")False"
      Write-Host "$("##vso[task.setvariable variable=RELEASE_VERSION;isOutput=true]")True"
      Write-Host "Release draft: FALSE"
    }
    else
    {
      # set variable
      Write-Host "$("##vso[task.setvariable variable=RELEASE_DRAFT;isOutput=true]")True"
      Write-Host "$("##vso[task.setvariable variable=RELEASE_VERSION;isOutput=true]")False"
      Write-Host "Release draft: TRUE"
    }
  name: SetReleaseDraftVar
  displayName: Set release draft var

- task: NuGetCommand@2
  inputs:
    command: 'custom' 
    arguments: 'pack nuspec\AMQPNetLite.nanoFramework.nuspec -Version $(NUGET_VERSION) -BasePath .\'
  displayName: Pack NuGet for AMQPNetLite

- task: NuGetCommand@2
  inputs:
    command: 'custom' 
    arguments: 'pack nuspec\AMQPNetMicro.nanoFramework.nuspec -Version $(NUGET_VERSION) -BasePath .\'
  condition: succeeded()
  displayName: Pack NuGet for AMQPNetMicro

- task: CopyFiles@1
  inputs:
    sourceFolder: $(Build.SourcesDirectory)
    Contents: |
      **\AMQP*.nupkg
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true
  condition: succeeded()
  displayName: Collecting deployable artifacts

# publish artifacts (only possible if this is not a PR originated on a fork)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: deployables
    ArtifactType: Container
  condition: and( succeeded(), ne(variables['system.pullrequest.isfork'], true) )
  displayName: Publish deployables artifacts

# push NuGet packages to Azure Artifacts feed (always happens except on PR builds)
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    publishFeedCredentials: 'AzureArtifacts'
  condition: and( succeeded(), ne(variables['system.pullrequest.isfork'], true) )
  continueOnError: true
  displayName: Push NuGet packages to Azure Artifacts

# push NuGet packages to MyGet feed (always happens except on PR builds)
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    publishFeedCredentials: 'NuGet'
  condition: and( succeeded(), ne(variables['system.pullrequest.isfork'], true) )
  continueOnError: true
  displayName: Push NuGet packages to NuGet

# step from template @ nf-tools repo
# report error
- template: azure-pipelines-templates/discord-webhook-task.yml@templates  
  parameters:
    status: 'failure'
    webhookUrl: '$(DiscordWebhook)'
    message: ''
